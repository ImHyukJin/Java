package Baekjoon;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Reader;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;
import java.util.StringTokenizer;

class Main{
	public static int lowerbound(ArrayList<Integer> list , int target) {
		int mid =-1; int answer = -1; int left = 0; int right = list.size();

		while(left< right) {
			mid = (left+right) /2;

			if(list.get(mid)>=target) {
				right = mid;
			}else {
				left = mid+1;
			}
		}



		return right;
	}
	public static int upperbound(ArrayList<Integer> list , int target) {
		int mid =-1; int answer = -1; int left = 0; int right = list.size();
		
		while(left< right) {
			mid = (left+right) /2;
			
			if(list.get(mid)<=target) {
				left = mid+1;
			}else {
				right = mid;
			}
		}
		
		
		
		return right;
	}
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		ArrayList<Integer> list = new ArrayList<>();
		ArrayList<Integer> list1 = new ArrayList<>();
		
		int N = sc.nextInt();
		for(int i = 0 ; i < N ; i++) {
			int a = sc.nextInt();
			list.add(a);
		}
		int M = sc.nextInt();
		for(int i = 0 ; i < M ;i++) {
			int a = sc.nextInt();
			list1.add(a);
		}
		
		list.sort(Comparator.naturalOrder());
		for(int i = 0 ; i < list1.size(); i++) {
			System.out.print(upperbound(list,list1.get(i))-lowerbound(list,list1.get(i)));
		}
	}
}