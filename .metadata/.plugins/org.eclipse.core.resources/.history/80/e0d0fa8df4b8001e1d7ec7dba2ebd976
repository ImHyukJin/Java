package Baekjoon;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.Reader;
import java.io.Writer;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;
import java.util.StringTokenizer;

class Main{
	public static int lowerbound(int[] arr , int target) {
		int mid =-1; int answer = -1; int left = 0; int right = arr.length;

		while(left< right) {
			mid = (left+right) /2;

			if(arr.length>=target) {
				right = mid;
			}else {
				left = mid+1;
			}
		}



		return right;
	}
	public static int upperbound(int[] arr , int target) {
		int mid =-1; int answer = -1; int left = 0; int right = arr.length;
		
		while(left< right) {
			mid = (left+right) /2;
			
			if(arr[mid]<=target) {
				left = mid+1;
			}else {
				right = mid;
			}
		}
		
		
		
		return right;
	}
	public static void main(String[] args) throws IOException {
		Scanner sc = new Scanner(System.in);
		ArrayList<Integer> list = new ArrayList<>();

		int N = sc.nextInt();
		int[] arr = new int[N];
		for(int i = 0 ; i < N ; i++) {
			int a = sc.nextInt();
			arr[i]=a;
		}
		list.sort(Comparator.naturalOrder());
		int M = sc.nextInt();
		for(int i = 0 ; i < M ;i++) {
			int a = sc.nextInt();
			System.out.println(upperbound(list,a)-lowerbound(list,a));
		}
		
	}
}